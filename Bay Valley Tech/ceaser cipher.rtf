{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red12\green99\blue153;\red242\green239\blue236;\red21\green20\blue38;
\red0\green0\blue0;\red210\green50\blue85;\red135\green135\blue135;\red135\green91\blue44;\red85\green138\blue3;
\red133\green0\blue67;\red93\green108\blue125;}
{\*\expandedcolortbl;;\cssrgb\c0\c46667\c66667;\cssrgb\c96078\c94902\c94118;\cssrgb\c10588\c10588\c19608;
\cssrgb\c0\c0\c0;\cssrgb\c86667\c29020\c40784;\cssrgb\c60000\c60000\c60000;\cssrgb\c60392\c43137\c22745;\cssrgb\c40000\c60000\c0;
\cssrgb\c60000\c0\c33333;\cssrgb\c43922\c50196\c56471;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
function\cf4  \cf6 rot13\cf7 (\cf4 str\cf7 )\cf4  \cf7 \{\cf4 \
  \cf2 let\cf4  decodedStr \cf8 =\cf4  \cf9 ''\cf7 ;\cf4 \
  \cf2 const\cf4  alphabet\cf8 =\cf4  \cf7 [\cf9 'A'\cf7 ,\cf9 'B'\cf7 ,\cf9 'C'\cf7 ,\cf9 'D'\cf7 ,\cf9 'E'\cf7 ,\cf9 'F'\cf7 ,\cf9 'G'\cf7 ,\cf9 'H'\cf7 ,\cf9 'I'\cf7 ,\cf9 'J'\cf7 ,\cf9 'K'\cf7 ,\cf9 'L'\cf7 ,\cf9 'M'\cf7 ,\cf9 'N'\cf7 ,\cf9 'O'\cf7 ,\cf9 'P'\cf7 ,\cf9 'Q'\cf7 ,\cf9 'R'\cf7 ,\cf9 'S'\cf7 ,\cf9 'T'\cf7 ,\cf9 'U'\cf7 ,\cf9 'V'\cf7 ,\cf9 'W'\cf7 ,\cf9 'X'\cf7 ,\cf9 'Y'\cf7 ,\cf9 'Z'\cf7 ]\cf4 \
  \cf2 for\cf7 (\cf2 let\cf4  i \cf8 =\cf10 0\cf7 ;\cf4  i\cf8 <\cf4 str\cf7 .\cf4 length\cf7 ;\cf4  i\cf8 ++\cf7 )\{\cf4 \
    \
    \cf2 let\cf4  cipherIndex \cf8 =\cf4  alphabet\cf7 .\cf6 indexOf\cf7 (\cf4 str\cf7 [\cf4 i\cf7 ]);\cf4 \
     \cf2 if\cf7 ((\cf4 cipherIndex\cf7 )\cf4  \cf8 !==\cf4  \cf8 -\cf10 1\cf7 )\cf4 \
     \cf7 \{\cf4 \
       \cf2 if\cf7 (\cf4 cipherIndex \cf8 >\cf4  \cf10 25\cf7 )\cf4 \
       \cf7 \{\cf4  \
         console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4  \
         cipherIndex \cf8 -=\cf4  \cf10 26\cf7 ;\cf4 \
         console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
         cipherIndex \cf8 -=\cf4  \cf10 13\cf7 ;\cf4 \
         console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
         decodedStr \cf8 +=\cf4  alphabet\cf7 [\cf4 cipherIndex\cf7 ];\cf4 \
       \cf7 \}\cf4 \
       \cf2 else\cf4  \cf2 if\cf7 (\cf4 cipherIndex \cf8 <\cf4  \cf10 13\cf7 )\cf4 \
       \cf7 \{\cf4 \
         console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
          \cf11 //cipherIndex += 26;\cf4 \
          console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
          cipherIndex \cf8 +=\cf4  \cf10 13\cf7 ;\cf4 \
          console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
          decodedStr \cf8 +=\cf4  alphabet\cf7 [\cf4 cipherIndex\cf7 ];\cf4 \
       \cf7 \}\cf4 \
       \cf2 else\cf7 \{\cf4 \
        console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
        cipherIndex \cf8 -=\cf4  \cf10 13\cf7 ;\cf4 \
        console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
        decodedStr \cf8 +=\cf4  alphabet\cf7 [\cf4 cipherIndex\cf7 ];\cf4 \
       \cf7 \}\cf4 \
\
     \cf7 \}\cf4  \cf2 else\cf7 \{\cf4 \
       decodedStr \cf8 +=\cf4  str\cf7 [\cf4 i\cf7 ];\cf4 \
       console\cf7 .\cf6 log\cf7 (\cf4 cipherIndex\cf7 );\cf4 \
     \cf7 \}\cf4 \
  \cf11 //console.log(i);\cf4 \
  console\cf7 .\cf6 log\cf7 (\cf4 decodedStr\cf7 );\cf4 \
  \cf7 \}\cf4 \
  \
\
  \cf2 return\cf4  decodedStr\cf7 ;\cf4 \
\cf7 \}\cf4 \
\
\cf6 rot13\cf7 (\cf9 "SERR PBQR PNZC"\cf7 );}