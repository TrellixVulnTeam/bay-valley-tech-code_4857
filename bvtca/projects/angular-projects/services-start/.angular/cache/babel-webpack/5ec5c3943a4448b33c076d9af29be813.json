{"ast":null,"code":"import _classCallCheck from \"/Volumes/Grimoire/bay-valley-tech-code/bvtca/projects/angular-projects/services-start/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Grimoire/bay-valley-tech-code/bvtca/projects/angular-projects/services-start/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { EventEmitter, Injectable } from \"@angular/core\";\nimport { LoggingService } from \"./logging.service\";\n\nvar AccountService = /*#__PURE__*/function () {\n  function AccountService(logService) {\n    _classCallCheck(this, AccountService);\n\n    this.logService = logService;\n    this.accounts = [{\n      name: 'Master Account',\n      status: 'active'\n    }, {\n      name: 'Testaccount',\n      status: 'inactive'\n    }, {\n      name: 'Hidden Account',\n      status: 'unknown'\n    }];\n    this.statusUpdated = new EventEmitter();\n  }\n\n  _createClass(AccountService, [{\n    key: \"addAccount\",\n    value: function addAccount(name, status) {\n      this.accounts.push({\n        name: name,\n        status: status\n      });\n      this.logService.logStatusChange(status);\n    }\n  }, {\n    key: \"updateStatus\",\n    value: function updateStatus(id, status) {\n      this.accounts[id].status = status;\n      this.logService.logStatusChange(status);\n    }\n  }]);\n\n  return AccountService;\n}();\n\nAccountService.ctorParameters = function () {\n  return [{\n    type: LoggingService\n  }];\n};\n\nAccountService = __decorate([Injectable() //add this to WHERE you want to inject the service\n], AccountService);\nexport { AccountService };","map":{"version":3,"sources":["/Volumes/Grimoire/bay-valley-tech-code/bvtca/projects/angular-projects/services-start/src/app/account.sercive.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","EventEmitter","Injectable","LoggingService","AccountService","logService","accounts","name","status","statusUpdated","push","logStatusChange","id","ctorParameters","type"],"mappings":";;;AAAA,IAAIA,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASQ,YAAT,EAAuBC,UAAvB,QAAyC,eAAzC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AACA,IAAIC,cAAc;AACd,0BAAYC,UAAZ,EAAwB;AAAA;;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgB,CACZ;AACIC,MAAAA,IAAI,EAAE,gBADV;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KADY,EAKZ;AACID,MAAAA,IAAI,EAAE,aADV;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KALY,EASZ;AACID,MAAAA,IAAI,EAAE,gBADV;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KATY,CAAhB;AAcA,SAAKC,aAAL,GAAqB,IAAIR,YAAJ,EAArB;AACH;;AAlBa;AAAA;AAAA,WAmBd,oBAAWM,IAAX,EAAiBC,MAAjB,EAAyB;AACrB,WAAKF,QAAL,CAAcI,IAAd,CAAmB;AAAEH,QAAAA,IAAI,EAAEA,IAAR;AAAcC,QAAAA,MAAM,EAAEA;AAAtB,OAAnB;AACA,WAAKH,UAAL,CAAgBM,eAAhB,CAAgCH,MAAhC;AACH;AAtBa;AAAA;AAAA,WAuBd,sBAAaI,EAAb,EAAiBJ,MAAjB,EAAyB;AACrB,WAAKF,QAAL,CAAcM,EAAd,EAAkBJ,MAAlB,GAA2BA,MAA3B;AACA,WAAKH,UAAL,CAAgBM,eAAhB,CAAgCH,MAAhC;AACH;AA1Ba;;AAAA;AAAA,GAAlB;;AA4BAJ,cAAc,CAACS,cAAf,GAAgC;AAAA,SAAM,CAClC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GADkC,CAAN;AAAA,CAAhC;;AAGAC,cAAc,GAAGnB,UAAU,CAAC,CACxBiB,UAAU,EADc,CACX;AADW,CAAD,EAExBE,cAFwB,CAA3B;AAGA,SAASA,cAAT","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { EventEmitter, Injectable } from \"@angular/core\";\nimport { LoggingService } from \"./logging.service\";\nlet AccountService = class AccountService {\n    constructor(logService) {\n        this.logService = logService;\n        this.accounts = [\n            {\n                name: 'Master Account',\n                status: 'active'\n            },\n            {\n                name: 'Testaccount',\n                status: 'inactive'\n            },\n            {\n                name: 'Hidden Account',\n                status: 'unknown'\n            }\n        ];\n        this.statusUpdated = new EventEmitter();\n    }\n    addAccount(name, status) {\n        this.accounts.push({ name: name, status: status });\n        this.logService.logStatusChange(status);\n    }\n    updateStatus(id, status) {\n        this.accounts[id].status = status;\n        this.logService.logStatusChange(status);\n    }\n};\nAccountService.ctorParameters = () => [\n    { type: LoggingService }\n];\nAccountService = __decorate([\n    Injectable() //add this to WHERE you want to inject the service\n], AccountService);\nexport { AccountService };\n"]},"metadata":{},"sourceType":"module"}